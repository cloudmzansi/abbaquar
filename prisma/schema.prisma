// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  role          Role      @default(USER)
  lastLoginAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  magicLinks    MagicLink[]
  activities    Activity[]
  events        Event[]
}

model MagicLink {
  id        String    @id @default(cuid())
  token     String    @unique
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime  @default(now())
}

model Activity {
  id          String    @id @default(cuid())
  title       String
  description String
  image       String?
  date        DateTime
  category    Category
  status      Status    @default(ACTIVE)
  createdBy   String
  user        User      @relation(fields: [createdBy], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Event {
  id                  String    @id @default(cuid())
  title               String
  description         String
  date                DateTime
  location            String
  image               String?
  registrationRequired Boolean  @default(false)
  maxAttendees        Int?
  status              Status    @default(UPCOMING)
  createdBy           String
  user                User      @relation(fields: [createdBy], references: [id])
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model ContactSubmission {
  id        String    @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  status    SubmissionStatus @default(PENDING)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum Category {
  YOUTH
  COMMUNITY
  EDUCATION
  HEALTH
}

enum Status {
  ACTIVE
  COMPLETED
  CANCELLED
  UPCOMING
  ONGOING
  PAST
}

enum SubmissionStatus {
  PENDING
  REVIEWED
  ARCHIVED
} 